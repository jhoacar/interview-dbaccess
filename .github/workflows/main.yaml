on:
  push:
    branches:
      - master
name: deploy
jobs:
  build-and-push:
    name: build and push docker image
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout Files of Github
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push the latest version for backend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/learning-api:${{ github.sha }},${{ secrets.DOCKER_HUB_USERNAME }}/learning-api:latest
      -
        name: Build and push the latest version for frontend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/learning:${{ github.sha }},${{ secrets.DOCKER_HUB_USERNAME }}/learning:latest
      
  deploy-to-host:
    name: deploy to host
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      -  
        name: Checkout Files of Github
        uses: actions/checkout@v2
      - 
        name: Copy docker-compose file via SSH Key
        uses: appleboy/scp-action@master

        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./backend/mongo.conf.d,docker-compose.yaml"
          target: "~"
      - 
        name: Executing " docker-compose up -d " in server!
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
              IMAGES_ID=$(docker images | grep "${{ secrets.DOCKER_HUB_USERNAME }}/learning" | awk '{ print $3 }')
              CONTAINER_RUNNING_ID=$(docker ps | grep "${{ secrets.DOCKER_HUB_USERNAME }}/learning" | awk '{ print $NF }')
              docker kill $CONTAINER_RUNNING_ID
              docker rm $CONTAINER_RUNNING_ID
              docker rmi $IMAGES_ID
              docker-compose up -d